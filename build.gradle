plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.asciidoctor.jvm.convert" version "3.3.2"  // (1) adoc(경량 마크업 언어) 파일 변환 및 build 디렉토리에 복사
	id 'com.epages.restdocs-api-spec' version '0.18.2' // swagger 자동변환 open api
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt // (2)
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets') // (5) snippets 파일이 저장될 경로 설정
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	// console
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// test
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// spring rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3) adoc 파일에서 사용할 snippets 속성이 자동으로 build/generated-snippets를 가르키도록 함
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4) MockMvc 테스트
	testImplementation 'com.epages:restdocs-api-spec:0.19.0'

	// swagger 자동변환 open api
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.7.0'

}

tasks.named('test') {
	outputs.dir snippetsDir // (6) 출력할 디렉토리 설정
	useJUnitPlatform()
}

tasks.register("restDocsTest", Test) {
	outputs.dir snippetsDir
	useJUnitPlatform {
		includeTags("restDocs")
	}

	finalizedBy "asciidoctor"
	finalizedBy "openapi3"
}

tasks.named("asciidoctor") {
	dependsOn restDocsTest // (10) build 시 restDocsTest 후 asciidoctor를 진행하도록 설정

	inputs.dir snippetsDir // (9) input 디렉토리를 설정
	configurations 'asciidoctorExt' // (7) asciidoctor에서 asciidoctorExt을 configurations로 사용하도록 설정
	baseDirFollowsSourceDir() // (8) .adoc 파일에서는 다른 .adoc 파일을 include하여 사용할 수 있는데 그럴 경우 경로를 동일하게 baseDir로 설정
}

task copyDocument(type: Copy) { // (12) 디렉토리에 생성된 html 문서 복사
	dependsOn openapi3
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

openapi3 {
	servers = [
			{ url = 'http://localhost:8080' },
	]
	title = 'RestDocs to Swagger 변환 테스트(변경 예정)'
	description = 'Spring rest docs convertor'
	version = '0.1.0'
	format = 'yaml'
}

tasks.register("apiBuild", GradleBuild) {
	tasks = ["clean", "restDocsTest", "build"]
}

springBoot {
	buildInfo()
}

bootJar {
	from("swagger-ui") {
		into "BOOT-INF/classes/static/swagger"
	}
	from("${asciidoctor.outputDir}") {
		into "BOOT-INF/classes/static/docs"
	}
	from("build/api-spec") {
		into "BOOT-INF/classes/static/swagger"
	}

	archiveFileName.set "application.jar"
}